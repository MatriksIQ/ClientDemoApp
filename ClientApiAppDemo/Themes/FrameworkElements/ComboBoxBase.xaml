<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    
    
    <!--DEFAULT COMBOBOX-->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ComboBox.Text.MouseOver.Foreground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewHover.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewHover.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ComboBox.Text.Selected.Foreground}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewSelected.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewSelected.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ComboBox.Text.Selected.Foreground}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ComboBox.Text.Selected.Foreground}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewFocus.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewFocus.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ComboBox.Text.Selected.Foreground}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{DynamicResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ComboBox.Static.Background}" SnapsToDevicePixels="true" CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Border x:Name="splitBorder" BorderBrush="{DynamicResource ComboBox.Static.Editable.Button.Border}" BorderThickness="{DynamicResource ComboBox.Button.Border.Thickness}" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" MaxWidth="26">
                            <Path x:Name="arrow" Data="F 1 M 2.019,5.253 C 1.241,4.475 0.875,3.569 1.204,3.239 1.534,2.91 2.44,3.276 3.218,4.054 L 4.586,5.422 C 5.363,6.201 6.636,6.201 7.414,5.422 L 8.782,4.054 C 9.559,3.276 10.466,2.91 10.796,3.239 11.125,3.569 10.759,4.475 9.982,5.253 L 8.613,6.621 C 7.835,7.399 6.929,8.305 6.599,8.634 6.27,8.964 5.73,8.964 5.4,8.634 5.071,8.305 4.165,7.399 3.387,6.621 L 2.019,5.253 Z" Fill="{DynamicResource ComboBox.Static.Glyph}" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" MaxWidth="10"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!--<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>-->
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Static.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.Static.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.MouseOver.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.MouseOver.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Pressed.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource ComboBox.Disabled.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Disabled.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ComboBox.Disabled.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource ComboBox.Disabled.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ComboBox.Text.Static.Foreground}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBox.Selection.Brush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ComboBox.Text.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ComboBox.Border.Thickness}"/>
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ComboBox.Border.Corner.Radius}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource ComboBox.Static.Popup.Border}" BorderThickness="1" Background="{DynamicResource ComboBox.Static.Popup.Background}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ComboBoxToggleButton}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource ComboBox.Static.Popup.Border}" BorderThickness="1" Background="{DynamicResource ComboBox.Static.Popup.Background}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ComboBoxToggleButton}"/>
                                <Border x:Name="border" Background="Transparent" Margin="1,1,10,1">
                                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{DynamicResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource Text.MouseOver.Foreground}"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    

    <!--SO SIMPLE COMBOBOX-->
    <ControlTemplate x:Key="ComboBoxToggleButtonPathless" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.Column="0" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderThickness="0" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
            <!--<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" Margin="0,0,3,0" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Data="F 1 M 2.019,5.253 C 1.241,4.475 0.875,3.569 1.204,3.239 1.534,2.91 2.44,3.276 3.218,4.054 L 4.586,5.422 C 5.363,6.201 6.636,6.201 7.414,5.422 L 8.782,4.054 C 9.559,3.276 10.466,2.91 10.796,3.239 11.125,3.569 10.759,4.475 9.982,5.253 L 8.613,6.621 C 7.835,7.399 6.929,8.305 6.599,8.634 6.27,8.964 5.73,8.964 5.4,8.634 5.071,8.305 4.165,7.399 3.387,6.621 L 2.019,5.253 Z" />-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SoSimple.ComboBox.Static.Editable.Button.Background}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SoSimple.ComboBox.Checked.Editable.Button.Background}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SoSimpleComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.Column="0" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderThickness="0" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" Margin="0,0,3,0" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Data="F 1 M 2.019,5.253 C 1.241,4.475 0.875,3.569 1.204,3.239 1.534,2.91 2.44,3.276 3.218,4.054 L 4.586,5.422 C 5.363,6.201 6.636,6.201 7.414,5.422 L 8.782,4.054 C 9.559,3.276 10.466,2.91 10.796,3.239 11.125,3.569 10.759,4.475 9.982,5.253 L 8.613,6.621 C 7.835,7.399 6.929,8.305 6.599,8.634 6.27,8.964 5.73,8.964 5.4,8.634 5.071,8.305 4.165,7.399 3.387,6.621 L 2.019,5.253 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SoSimple.ComboBox.Static.Editable.Button.Background}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SoSimple.ComboBox.Checked.Editable.Button.Background}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="SoSimpleComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource SoSimple.ComboBox.Item.Static.Foreground}"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" Margin="1,2,1,1" SnapsToDevicePixels="true" Background="Transparent">
                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SoSimple.ComboBox.Item.Selected.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SoSimple.ComboBox.Item.Selected.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SoSimple.ComboBox.Item.MouseOver.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SoSimple.ComboBox.Item.MouseOver.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SoSimpleComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource Sosimple.ComboBox.Static.Foreground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SoSimpleComboBoxItem}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Grid x:Name="templateRoot" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding Height}" Template="{StaticResource SoSimpleComboBoxToggleButton}" Margin="0" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="0" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" MaxHeight="330">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource ComboBox.Static.Popup.Border}" BorderThickness="1" Background="{DynamicResource ComboBox.Static.Popup.Background}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="dropDownBorder" Property="Margin" Value="0,1,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SoSimpleComboBoxPathless" TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ComboBox.Static.Glyph}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SoSimpleComboBoxItem}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Grid x:Name="templateRoot" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding Height}" Template="{StaticResource ComboBoxToggleButtonPathless}" Margin="0" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="0" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" MaxHeight="330">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource ComboBox.Static.Popup.Border}" BorderThickness="1" Background="{DynamicResource ComboBox.Static.Popup.Background}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="dropDownBorder" Property="Margin" Value="0,1,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--ALERT CONDITION COMBOBOX-->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" />
    </ControlTemplate>
    <Style x:Key="AlertConditionToggleButtonNoArrow" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" 
                                Grid.Column="0"
                            CornerRadius="0" 
                            BorderThickness="0,0,0,1" 
                            BorderBrush="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}" 
                            Background="{TemplateBinding Background}" />
                        <Border Grid.Column="1" 
                                Height="{TemplateBinding ActualHeight}" 
                                Width="{TemplateBinding ActualHeight}"
                                BorderThickness="0,0,1,1"
                                BorderBrush="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}"
                                Background="{TemplateBinding Background}">
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"></Trigger>
                        <Trigger Property="IsChecked" Value="True"></Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlertConditionItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Static.Background}"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" Margin="1,2,1,1" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource AlertCondition.ComboBox.MouseOver.Foreground}"/>
                            <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.MouseOver.Background}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AlertCondition.ComboBox.Selected.Foreground}"/>
                            <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Selected.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlertConditionComboStyleNoArrow" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border.Thickness}"/>
        <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource AlertCondition.ComboBox.Static.Foreground}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource AlertConditionItem}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                      Height="{TemplateBinding Height}"
                                      Style="{DynamicResource AlertConditionToggleButtonNoArrow}" 
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Opacity="{TemplateBinding Opacity}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false" 
                                      ClickMode="Press" 
									  FontSize="{TemplateBinding FontSize}"
									  FontWeight="{TemplateBinding FontWeight}"/>

                        <ContentPresenter x:Name="ContentSite" 
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                                        Style="{x:Null}" 
                                        Template="{StaticResource ComboBoxTextBox}" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center" 
                                        Text="{TemplateBinding Text}"
                                        Margin="3,3,23,3"
                                        Focusable="True" 
                                        Background="Transparent"
                                        Visibility="Collapsed"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
										FontSize="{TemplateBinding FontSize}"
										FontWeight="{TemplateBinding FontWeight}"/>

                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               PopupAnimation="Slide">

                            <Grid x:Name="DropDown" 
                                  SnapsToDevicePixels="True" 
                                  MinWidth="{TemplateBinding ActualWidth}" 
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border x:Name="DropDownBorder"
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" />

                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>

                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}"/>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AlertCondition.ComboBox.Checked.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AlertConditionToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" 
                                Grid.Column="0"
                            CornerRadius="0" 
                            BorderThickness="0,0,0,1" 
                            BorderBrush="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}" 
                            Background="{TemplateBinding Background}" />
                        <Border Grid.Column="1" 
                                Height="{TemplateBinding ActualHeight}" 
                                Width="{TemplateBinding ActualHeight}"
                                BorderThickness="0,0,1,1"
                                BorderBrush="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}"
                                Background="{TemplateBinding Background}">
                            <Path x:Name="Arrow" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Fill="{DynamicResource AlertCondition.ComboBox.Static.Editable.Fill}" 
                                  Stretch="Uniform"
                                  Width="12" Height="10"
                                  Data="F 1 M 2.019,5.253 C 1.241,4.475 0.875,3.569 1.204,3.239 1.534,2.91 2.44,3.276 3.218,4.054 L 4.586,5.422 C 5.363,6.201 6.636,6.201 7.414,5.422 L 8.782,4.054 C 9.559,3.276 10.466,2.91 10.796,3.239 11.125,3.569 10.759,4.475 9.982,5.253 L 8.613,6.621 C 7.835,7.399 6.929,8.305 6.599,8.634 6.27,8.964 5.73,8.964 5.4,8.634 5.071,8.305 4.165,7.399 3.387,6.621 L 2.019,5.253 Z" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"></Trigger>
                        <Trigger Property="IsChecked" Value="True"></Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlertConditionComboStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AlertCondition.ComboBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource AlertCondition.ComboBox.Static.Foreground}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource AlertConditionItem}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                      Height="{TemplateBinding Height}"
                                      Style="{DynamicResource AlertConditionToggleButton}" 
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Opacity="{TemplateBinding Opacity}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false" 
                                      ClickMode="Press"
									  FontSize="{TemplateBinding FontSize}"
									  FontWeight="{TemplateBinding FontWeight}" />

                        <ContentPresenter x:Name="ContentSite" 
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  TextBlock.FontSize="{TemplateBinding FontSize}"
										  TextBlock.FontWeight="{TemplateBinding FontWeight}">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                                        Style="{x:Null}" 
                                        Template="{StaticResource ComboBoxTextBox}" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        Text="{TemplateBinding Text}"
                                        Margin="3"
                                        Focusable="True" 
                                        Background="Transparent"
                                        Visibility="Collapsed"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
										FontSize="{TemplateBinding FontSize}"
										FontWeight="{TemplateBinding FontWeight}"/>

                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               PopupAnimation="Slide">

                            <Grid x:Name="DropDown" 
                                  SnapsToDevicePixels="True" 
                                  MinWidth="{TemplateBinding ActualWidth}" 
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border x:Name="DropDownBorder"
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" />

                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>

                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}"/>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AlertCondition.ComboBox.Checked.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AlertConditionWithArrowToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" Grid.Column="0" CornerRadius="0" BorderThickness="0,1,0,1" BorderBrush="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}" Background="{TemplateBinding Background}" />
                        <Border Grid.Column="1" x:Name="BtnArea" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualHeight}" BorderThickness="1,1,0,1" BorderBrush="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}" Background="{DynamicResource AlertConditionCombo.Arrow.Static.ToggleBackground}">
                            <Path x:Name="Arrow" Width="12" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource AlertConditionCombo.Glyph.Static.Fill}" Stretch="Uniform" Data="F 1 M 2.019,5.253 C 1.241,4.475 0.875,3.569 1.204,3.239 1.534,2.91 2.44,3.276 3.218,4.054 L 4.586,5.422 C 5.363,6.201 6.636,6.201 7.414,5.422 L 8.782,4.054 C 9.559,3.276 10.466,2.91 10.796,3.239 11.125,3.569 10.759,4.475 9.982,5.253 L 8.613,6.621 C 7.835,7.399 6.929,8.305 6.599,8.634 6.27,8.964 5.73,8.964 5.4,8.634 5.071,8.305 4.165,7.399 3.387,6.621 L 2.019,5.253 Z" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BtnArea" Value="{DynamicResource AlertConditionCombo.Arrow.MouseOver.ToggleBackground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True"></Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlertConditionWithArrowComboStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Border.Thickness}"/>
        <Setter Property="Background" Value="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource AlertCondition.ComboBox.Static.Foreground}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource AlertConditionItem}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                      Height="{TemplateBinding Height}"
                                      Style="{DynamicResource AlertConditionWithArrowToggleButton}" 
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Opacity="{TemplateBinding Opacity}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false" 
                                      ClickMode="Press"
										FontSize="{TemplateBinding FontSize}"
										FontWeight="{TemplateBinding FontWeight}" />

                        <ContentPresenter x:Name="ContentSite" 
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               PopupAnimation="Slide">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border>
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="7" BlurRadius="15" Opacity="0.4"/>
                                    </Border.Effect>

                                    <Grid x:Name="DropDown" 
                                          SnapsToDevicePixels="True" 
                                          MinWidth="{TemplateBinding ActualWidth}" 
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                        <Border x:Name="DropDownBorder"
                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                Background="{DynamicResource AlertCondition.ComboBox.Static.Editable.Background}" 
                                                BorderBrush="{TemplateBinding BorderBrush}" />

                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>

                                    </Grid>
                                </Border>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--SHARE COMBOBOX-->
    <ControlTemplate x:Key="ShareComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border Background="{TemplateBinding Background}" Cursor="Hand">
            <Path Width="16" Height="16" Stretch="Uniform" Fill="{DynamicResource Share.Toggle.Foreground}" Data="M 17.766,3.735 C 17.408,4.028 17.282,4.324 17.275,4.784 17.197,10.017 13.587,14.39 8.474,15.406 5.816,15.934 3.291,15.485 0.866002,14.129 1.826,13.96 2.739,13.885 3.594,13.622 4.437,13.362 5.221,12.912 6.031,12.545 6.011,12.461 5.991,12.377 5.972,12.293 4.395,12.084 3.267,11.294 2.621,9.787 3.133,9.736 3.581,9.69 4.029,9.646 2.368,8.903 1.347,7.75 1.213,5.868 1.743,6.009 2.224,6.136 2.705,6.263 1.295,4.771 0.821,3.161 1.72,1.152 3.885,3.54 6.438,4.933 9.584,5.103 9.648,4.404 9.616,3.758 9.779,3.165 10.455,0.703 13.385,-0.44 15.469,1.032 16.278,1.604 16.905,1.532 17.665,1.19 17.93,1.071 18.195,0.955 18.46,0.837 18.514,0.879 18.566,0.921 18.619,0.964 18.182,1.537 17.745,2.11 17.23,2.786 17.845,2.638 18.389,2.507 19.144,2.325 18.604,2.889 18.224,3.36 17.766,3.735 Z"/>
        </Border>
    </ControlTemplate>
    <Style x:Key="ShareComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource Share.ComboBox.Item.Static.Foreground}"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="6" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Share.ComboBox.Item.Hover.Foreground}"/>
                        </Trigger>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Share.ComboBox.Item.Hover.Foreground}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShareComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource Share.ComboBox.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Share.ComboBox.Item.Static.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ShareComboBoxItem}"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                                      MinHeight="{TemplateBinding MinHeight}" Height="{TemplateBinding Height}" Template="{StaticResource ShareComboBoxToggleButton}"
                                      Margin="0" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,0,23,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" MaxHeight="300">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=ToggleButton}">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource ComboBox.Static.Popup.Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Orientation="Vertical"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Share.ComboBox.Static.Editable.Button.Background}"/>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Share.ComboBox.Checked.Editable.Button.Background}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!--SAVE COMBOBOX-->
    <ControlTemplate x:Key="SaveComboBoxToggleButton" TargetType="ToggleButton">
        <Border Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" CornerRadius="{DynamicResource Toggle.Button.Corner.Radius}">
            <!--<Border Margin="0" Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center">-->
            <Path Stretch="UniformToFill" Margin="3" Fill="{TemplateBinding Foreground}" Data="F 1 M 15.736,14.558 C 15.954,14.346 17.402,14.692 18.742,14.967 L 18.742,6.333 C 18.742,5.229 19.609,4.326 20.67,4.326 21.731,4.326 22.598,5.229 22.598,6.333 L 22.598,14.877 C 23.464,14.662 24.271,14.437 24.271,14.437 24.271,14.437 25.263,14.228 25.603,14.558 25.941,14.888 25.565,15.796 24.764,16.578 L 23.356,17.951 C 22.558,18.731 21.626,19.64 21.286,19.972 20.948,20.303 20.391,20.303 20.053,19.972 L 17.984,17.951 16.577,16.578 C 15.774,15.796 15.399,14.888 15.736,14.558 Z M 11.914,6.16 C 12.467,6.151 13.02,6.151 13.574,6.16 13.864,6.165 13.961,6.047 13.957,5.779 13.945,5.072 13.953,4.365 13.953,3.656 13.953,2.949 13.939,2.241 13.959,1.534 13.968,1.214 13.839,1.106 13.518,1.116 12.996,1.128 12.474,1.126 11.953,1.116 11.666,1.11 11.507,1.196 11.508,1.499 11.514,2.928 11.512,4.36 11.509,5.789 11.508,6.056 11.632,6.166 11.914,6.16 Z M 14.957,18.851 C 13.464,18.851 11.97,18.851 10.477,18.851 8.15,18.851 5.824,18.851 3.498,18.851 2.836,18.851 2.746,18.769 2.746,18.159 2.745,15.341 2.745,12.522 2.746,9.704 2.746,9.1 2.867,8.982 3.485,8.982 7.652,8.981 11.819,8.981 15.986,8.982 L 15.986,6.333 C 15.986,4.024 17.61,2.095 19.757,1.662 19.711,1.62 19.669,1.577 19.619,1.535 17.924,0.118 18.658,0.35 16.377,0.303 15.975,0.296 15.873,0.42 15.877,0.789 15.894,2.721 15.888,4.653 15.884,6.584 15.883,7.146 15.779,7.243 15.189,7.243 12.051,7.245 8.914,7.245 5.779,7.243 5.237,7.241 5.11,7.117 5.11,6.599 5.108,4.789 5.109,2.978 5.109,1.166 5.109,0.9 5.109,0.631 5.109,0.31 4.038,0.31 3.014,0.31 1.987,0.313 0.747,0.313 0.276,0.771 0.276,1.966 0.275,7.64 0.275,13.314 0.275,18.986 0.276,20.27 0.722,20.699 2.066,20.699 6.993,20.699 11.921,20.698 16.85,20.696 L 14.957,18.851 Z" />
            <!--</Border>-->
        </Border>
    </ControlTemplate>
    <Style x:Key="SaveComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource SaveCombo.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource SaveCombo.Static.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SaveCombo.Brush}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ShareComboBoxItem}"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                      Template="{StaticResource SaveComboBoxToggleButton}" Margin="0" Focusable="false" ClickMode="Press" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,0,23,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" MaxHeight="300">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource SaveCombo.Popup.Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Orientation="Vertical"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SaveCombo.MouseOver.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SaveCombo.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SaveCombo.Checked.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SaveCombo.Checked.Foreground}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="HeaderSaveComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Separator Grid.Column="0" VerticalAlignment="Stretch" Style="{DynamicResource Seperator.Horizontal.Invert}"/>
            <Border Grid.Column="1" Height="14" Width="14" Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Path Fill="{TemplateBinding Foreground}" Stretch="UniformToFill" Data="F 1 M 15.736,14.558 C 15.954,14.346 17.402,14.692 18.742,14.967 L 18.742,6.333 C 18.742,5.229 19.609,4.326 20.67,4.326 21.731,4.326 22.598,5.229 22.598,6.333 L 22.598,14.877 C 23.464,14.662 24.271,14.437 24.271,14.437 24.271,14.437 25.263,14.228 25.603,14.558 25.941,14.888 25.565,15.796 24.764,16.578 L 23.356,17.951 C 22.558,18.731 21.626,19.64 21.286,19.972 20.948,20.303 20.391,20.303 20.053,19.972 L 17.984,17.951 16.577,16.578 C 15.774,15.796 15.399,14.888 15.736,14.558 Z M 11.914,6.16 C 12.467,6.151 13.02,6.151 13.574,6.16 13.864,6.165 13.961,6.047 13.957,5.779 13.945,5.072 13.953,4.365 13.953,3.656 13.953,2.949 13.939,2.241 13.959,1.534 13.968,1.214 13.839,1.106 13.518,1.116 12.996,1.128 12.474,1.126 11.953,1.116 11.666,1.11 11.507,1.196 11.508,1.499 11.514,2.928 11.512,4.36 11.509,5.789 11.508,6.056 11.632,6.166 11.914,6.16 Z M 14.957,18.851 C 13.464,18.851 11.97,18.851 10.477,18.851 8.15,18.851 5.824,18.851 3.498,18.851 2.836,18.851 2.746,18.769 2.746,18.159 2.745,15.341 2.745,12.522 2.746,9.704 2.746,9.1 2.867,8.982 3.485,8.982 7.652,8.981 11.819,8.981 15.986,8.982 L 15.986,6.333 C 15.986,4.024 17.61,2.095 19.757,1.662 19.711,1.62 19.669,1.577 19.619,1.535 17.924,0.118 18.658,0.35 16.377,0.303 15.975,0.296 15.873,0.42 15.877,0.789 15.894,2.721 15.888,4.653 15.884,6.584 15.883,7.146 15.779,7.243 15.189,7.243 12.051,7.245 8.914,7.245 5.779,7.243 5.237,7.241 5.11,7.117 5.11,6.599 5.108,4.789 5.109,2.978 5.109,1.166 5.109,0.9 5.109,0.631 5.109,0.31 4.038,0.31 3.014,0.31 1.987,0.313 0.747,0.313 0.276,0.771 0.276,1.966 0.275,7.64 0.275,13.314 0.275,18.986 0.276,20.27 0.722,20.699 2.066,20.699 6.993,20.699 11.921,20.698 16.85,20.696 L 14.957,18.851 Z"/>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="HeaderSaveComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource Share.ComboBox.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource SaveCombo.MouseOver.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBox.Static.Border}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ShareComboBoxItem}"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Width="26" Height="26"
                                      Template="{StaticResource HeaderSaveComboBoxToggleButton}" Margin="0" Focusable="false" ClickMode="Press" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,0,23,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" MaxHeight="300">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource ComboBox.Static.Popup.Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Orientation="Vertical"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Share.ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SaveCombo.Checked.Foreground}"/>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Share.ComboBox.Checked.Editable.Button.Background}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SaveCombo.Checked.Foreground}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--SPREADSHEET COMBOBOX-->
    <Style x:Key="Spreadsheet.Toolbar.Combobox.Item" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Foreground.Static}"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" Margin="1,2,1,1" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Popup.Background}"/>
                            <Setter Property="Background" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Foreground.Active}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Popup.Background}"/>
                            <Setter Property="Background" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Foreground.Active}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Spreadsheet.Toolbar.Paste.Toggle.Style" TargetType="{x:Type ToggleButton}">
        <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="2"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Path Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Uniform" Data="F 1 M 2.845,3.573 L 2.845,5.029 C 2.845,5.029 2.899,6.161 4.032,6.161 5.165,6.161 13.9,6.161 13.9,6.161 13.9,6.161 15.087,6.216 15.087,4.867 15.087,4.813 15.087,3.573 15.087,3.573 L 16.704,3.573 C 16.704,3.573 17.647,3.627 17.647,4.516 17.647,5.405 17.647,20.288 17.647,20.288 17.647,20.288 17.893,21.58 16.355,21.58 14.817,21.58 1.552,21.58 1.552,21.58 1.552,21.58 0.340001,21.419 0.340001,20.368 0.340001,19.317 0.340001,4.597 0.340001,4.597 0.340001,4.597 0.448001,3.479 1.459,3.479 2.468,3.479 2.845,3.573 2.845,3.573 Z M 3.708,2.226 L 3.708,5.5 14.169,5.5 14.169,2.226 11.904,2.226 10.799,0.419 6.89,0.419 5.919,2.226 3.708,2.226 Z" />
                    </Border>
                    <TextBlock Grid.Row="1" x:Name="Yapistir" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="10" TextWrapping="Wrap" SnapsToDevicePixels="True" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Yapıştır"/>
                </Grid>
                <StackPanel Grid.Column="2" VerticalAlignment="Stretch" Orientation="Horizontal">
                    <Border Width="1" Background="#efefef"/>
                    <Border Width="1" Background="#adaead"/>
                </StackPanel>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="Spreadsheet.Toolbar.Paste.Combobox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Background.Static}"/>
        <Setter Property="Foreground" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Foreground.Static}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource Spreadsheet.Toolbar.Combobox.Item}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                                      Template="{StaticResource Spreadsheet.Toolbar.Paste.Toggle.Style}" Margin="0" Focusable="false" ClickMode="Press" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,0,23,0" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="Collapsed"/>

                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" MaxHeight="300">
                            <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource Spreadsheet.Toolbar.Combo.Popup.Background}" BorderBrush="Transparent" BorderThickness="0">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Orientation="Vertical"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Foreground.Static}"/>
                            <Setter Property="Background" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Background.Active}"/>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Foreground.Active}"/>
                            <Setter Property="Background" Value="{DynamicResource Spreadsheet.Toolbar.Combo.Background.Active}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>