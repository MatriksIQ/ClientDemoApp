<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="SeparatorBase.xaml"/>
        <ResourceDictionary Source="ScrollBarBase.xaml"/>
        <ResourceDictionary Source="/ClientApiAppDemo;component/Themes/FrameworkElements/SeparatorBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Height="30">
            <Grid VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="CoverBorder" />
                <ContentPresenter Margin="6,0" ContentSource="Header" RecognizesAccessKey="True" 
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                <Separator Grid.Column="2" Style="{DynamicResource Seperator.Horizontal.Invert}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Width="2"/>

                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{DynamicResource MainMenu.Popup.Background}" BorderBrush="Transparent" BorderThickness="0" Padding="0,5">
                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="CoverBorder" Value="{DynamicResource MainMenu.Header.MouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Background" TargetName="CoverBorder" Value="{DynamicResource MainMenu.Header.Checked.Background}"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="Slide"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Margin="6,0" ContentSource="Header" RecognizesAccessKey="True" 
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                <Border x:Name="CoverBorder"/>
                <Separator Grid.Column="2" Style="{DynamicResource Seperator.Horizontal.Invert}" VerticalAlignment="Stretch" Width="2"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="CoverBorder" Value="{DynamicResource MainMenu.Header.MouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="CoverBorder" Value="{DynamicResource MainMenu.Header.Checked.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="5,0" Padding="0,5,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="28" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="7"/>
                </Grid.RowDefinitions>

                <ContentPresenter Name="Icon" Margin="6,0" VerticalAlignment="Center" ContentSource="Icon"/>

                <Border Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="Transparent" BorderThickness="1" BorderBrush="Transparent">
                    <Path Name="CheckMark" Width="13" Height="13" Visibility="Hidden" Stretch="Uniform" SnapsToDevicePixels="False" Fill="{TemplateBinding Foreground}" Data="F 1 M 18.177,6.899 C 18.49,6.919 18.594,7.142 18.408,7.395 L 10.658,17.914 C 10.472,18.166 10.174,18.162 9.995,17.904 L 6.628,13.072 C 6.448,12.815 6.458,12.401 6.649,12.152 L 6.734,12.04 C 6.924,11.791 7.271,11.759 7.505,11.969 L 9.811,14.044 C 10.043,14.254 10.401,14.231 10.605,13.992 L 16.425,7.737 C 16.638,7.507 17.029,7.205 17.293,7.064 17.558,6.925 18.177,6.899 18.177,6.899" />
                </Border>

                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" TextElement.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True" VerticalAlignment="Center"/>

                <Border x:Name="InputGestureText" Grid.Column="2" Margin="10,0" DockPanel.Dock="Right" CornerRadius="4" Background="{DynamicResource InputGestureText.Background}">
                    <TextBlock Text="{TemplateBinding InputGestureText}" Margin="7,0" />
                </Border>

                <Separator Grid.ColumnSpan="4" Grid.Row="1" Style="{DynamicResource Seperator.MenuItem.Vertical}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItem.MouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
            </Trigger>
            <Trigger Property="InputGestureText" Value="">
                <Setter Property="Visibility" TargetName="InputGestureText" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="5,0" Padding="0,5,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="28" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="7"/>
                </Grid.RowDefinitions>

                <ContentPresenter Name="Icon" Margin="6,0" VerticalAlignment="Center" ContentSource="Icon"/>

                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" TextElement.Foreground="{TemplateBinding Foreground}"  RecognizesAccessKey="True" VerticalAlignment="Center"/>

                <Border x:Name="InputGestureText" Grid.Column="2" Margin="10,0" DockPanel.Dock="Right" CornerRadius="4" Background="{DynamicResource InputGestureText.Background}">
                    <TextBlock Text="{TemplateBinding InputGestureText}" Margin="7,0" />
                </Border>

                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{DynamicResource MenuItem.Static.Glyph}" />

                <Separator Grid.ColumnSpan="4" Grid.Row="1" Style="{DynamicResource Seperator.MenuItem.Vertical}" HorizontalAlignment="Stretch" Height="2" VerticalAlignment="Bottom"/>

                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4"  IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{DynamicResource MainMenu.Popup.Background}" BorderBrush="Transparent" BorderThickness="0" Padding="0,5">
                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItem.MouseOver.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Menu.Disabled.Foreground}"/>
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
                <Setter Property="ToolTipService.IsEnabled" Value="False"/>
            </Trigger>
            <Trigger Property="InputGestureText" Value="">
                <Setter Property="Visibility" TargetName="InputGestureText" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template" Value="{StaticResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
                <Setter Property="Padding" Value="6,0"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubMenuItem">
                <Setter Property="Template" Value="{StaticResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuHeaderTopLevelItem" TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Height="20" Width="20">
                        <Grid VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" 
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{DynamicResource MainMenu.Popup.Background}" BorderBrush="Transparent" BorderThickness="0" Padding="0,5">
                                    <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="Slide"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainMenu.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainMenu.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MainMenu.Pressed.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource MainMenu.Static.Background}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource MainMenu.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource MainMenu.Static.Background}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <!--<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}" >
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Tooltip.Static.Foreground}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="VerticalOffset" Value="0" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}" >
                    <StackPanel Margin="7,1" >
                        <Border Background="{DynamicResource Tooltip.Static.Background}" BorderBrush="{DynamicResource Tooltip.Static.Border}" BorderThickness="1" Padding="{TemplateBinding Padding}">
                            <ContentPresenter Margin="1" HorizontalAlignment="Center" />
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>